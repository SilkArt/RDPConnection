name: Enable RDP with Ngrok on Windows

on:
  workflow_dispatch:

jobs:
  enable-rdp:
    runs-on: windows-latest
    steps:
      - name: Get Current Logged-in User
        id: get_current_user
        run: |
          # Get the currently logged-in username
          $user = whoami | ForEach-Object { $_.Split("\")[1] }
          echo "Current logged-in user is $user"
          echo "::set-output name=USERNAME::$user"

      - name: Enable RDP through Registry
        run: |
          reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
          reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\TermService" /v Start /t REG_DWORD /d 2 /f
          Set-Service -Name "TermService" -StartupType Automatic
          Start-Service -Name "TermService"

      - name: Open RDP Port 3389 in Firewall
        run: |
          netsh advfirewall firewall add rule name="Open RDP Port 3389" protocol=TCP dir=in localport=3389 action=allow

      - name: Set Password for Current User
        run: |
          net user ${{ steps.get_current_user.outputs.USERNAME }} P@ssw0rd123!

      - name: Download Ngrok
        run: |
          Invoke-WebRequest -Uri https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath $env:GITHUB_WORKSPACE

      - name: Install Ngrok Authtoken
        run: |
          .\ngrok.exe config add-authtoken ${{ secrets.NGROK_AUTHTOKEN }}

      - name: Start Ngrok Tunnel for RDP
        id: start_ngrok
        run: |
          Start-Process -FilePath "$env:GITHUB_WORKSPACE\ngrok.exe" -ArgumentList "tcp 3389" -NoNewWindow -PassThru
          Start-Sleep -Seconds 10

      - name: Get Ngrok Public URL
        id: get_ngrok_url
        run: |
          $ngrokApiUrl = "https://api.ngrok.com/tunnels"
          $headers = @{
            "Authorization" = "Bearer $env:NGROK_API_KEY"
            "Ngrok-Version" = "2"
          }
          $response = Invoke-RestMethod -Uri $ngrokApiUrl -Headers $headers
          $publicUrl = ($response.tunnels | Where-Object { $_.proto -eq "tcp" }).public_url
          echo "::set-output name=NGROK_URL::$publicUrl"

      - name: Display RDP Connection Details
        run: |
          echo "=============================================="
          echo "RDP is now enabled via Ngrok."
          echo "You can connect using the following credentials:"
          echo "Ngrok URL: ${{ steps.get_ngrok_url.outputs.NGROK_URL }}"
          echo "Username: ${{ steps.get_current_user.outputs.USERNAME }}"
          echo "Password: P@ssw0rd123!"
          echo "=============================================="

      - name: Keep Action Running for 6 Hours
        run: |
          $end = (Get-Date).AddHours(6)
          while ((Get-Date) -lt $end) {
            ping -n 10 google.com
          }
