name: Enable RDP on Windows

on:
  workflow_dispatch:

jobs:
  enable-rdp:
    runs-on: windows-latest
    steps:
      - name: Get Current Logged-in User
        id: get_current_user
        run: |
          # Get the currently logged-in username
          $user = whoami | ForEach-Object { $_.Split("\")[1] }
          echo "Current logged-in user is $user"
          echo "::set-output name=USERNAME::$user"

      - name: Enable RDP through Registry
        run: |
          reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
          reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\TermService" /v Start /t REG_DWORD /d 2 /f
          Set-Service -Name "TermService" -StartupType Automatic
          Start-Service -Name "TermService"

      - name: Open RDP Port 3389 in Firewall
        run: |
          netsh advfirewall firewall add rule name="Open RDP Port 3389" protocol=TCP dir=in localport=3389 action=allow

      - name: Verify Firewall Rule for Port 3389
        run: |
          netsh advfirewall firewall show rule name="Open RDP Port 3389"

      - name: Set Password for Current User
        run: |
          net user ${{ steps.get_current_user.outputs.USERNAME }} P@ssw0rd123!

      - name: Get Public IP Address
        id: get_public_ip
        run: |
          $ip = Invoke-RestMethod -Uri http://ipinfo.io/ip
          echo "::set-output name=PUBLIC_IP::$ip"

      - name: Display RDP Connection Details
        run: |
          echo "=============================================="
          echo "RDP is now enabled."
          echo "You can connect using the following credentials:"
          echo "IP Address: ${{ steps.get_public_ip.outputs.PUBLIC_IP }}"
          echo "Username: ${{ steps.get_current_user.outputs.USERNAME }}"
          echo "Password: P@ssw0rd123!"
          echo "=============================================="

      - name: Keep Action Running for 6 Hours
        run: |
          $end = (Get-Date).AddHours(6)
          while ((Get-Date) -lt $end) {
            ping -n 10 google.com
          }
